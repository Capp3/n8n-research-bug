name: Code Quality

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # Allow manual triggering

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Install UV
        uses: astral-sh/setup-uv@v6
        with:
          version: 'latest'

      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: ${{ runner.os }}-uv-${{ hashFiles('scripts/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-uv-

      - name: Create virtual environment and install dependencies
        run: |
          uv venv
          uv pip install PyYAML linkchecker

      - name: Validate YAML files
        run: |
          echo "üîç Validating YAML files..."
          source .venv/bin/activate
          python -c "import yaml; yaml.safe_load(open('mkdocs.yml'))"
          for file in .github/workflows/*.yml; do
            echo "Validating $file"
            source .venv/bin/activate
            python -c "import yaml; yaml.safe_load(open('$file'))"
          done
          echo "‚úÖ All YAML files are valid"

      - name: Check documentation structure
        run: |
          echo "üîç Checking documentation structure..."
          test -f docs/index.md
          test -f docs/projectbrief.md
          test -f docs/technical.md
          test -f docs/system-prompts.md
          test -f docs/mermaid-test.md
          test -d docs/creative
          test -d docs/implementation
          test -d docs/contributing
          test -d docs/status
          test -d docs/archive
          test -d docs/test-data
          test -d docs/reflection
          echo "‚úÖ Documentation structure is valid"

      - name: Validate MkDocs configuration
        run: |
          echo "üîç Validating MkDocs configuration..."
          uv pip install -r scripts/requirements.txt
          source .venv/bin/activate
          mkdocs build --clean --strict
          echo "‚úÖ MkDocs configuration is valid"

      - name: Check for broken internal links
        run: |
          echo "üîç Checking for broken internal links..."
          source .venv/bin/activate
          mkdocs build --clean
          # Check for common broken link patterns
          if grep -r "\.md" site/ | grep -v "\.html" | grep -v "mermaid"; then
            echo "‚ö†Ô∏è  Found potential broken markdown links"
            grep -r "\.md" site/ | grep -v "\.html" | grep -v "mermaid" || true
          else
            echo "‚úÖ No broken internal links found"
          fi

      - name: Validate file permissions
        run: |
          echo "üîç Validating file permissions..."
          # Check that all .md files are readable
          find docs/ -name "*.md" -not -readable && exit 1 || echo "‚úÖ All markdown files are readable"
          # Check that all .yml files are readable
          find .github/ -name "*.yml" -not -readable && exit 1 || echo "‚úÖ All workflow files are readable"
          echo "‚úÖ File permissions are valid"
